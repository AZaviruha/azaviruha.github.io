{"version":3,"file":"useCommand.stories-afb2454a.js","sources":["../../src/utils/defer.ts","../../src/hooks/useCommand/useCommand.ts","../../src/types/index.ts","../../src/utils/fail.ts","../../src/utils/ok.ts","../../src/hooks/useCommand/useCommandListener.ts","../../src/hooks/useCommand/__examples__/styles.ts","../../src/hooks/useCommand/__examples__/index.tsx","../../src/hooks/useCommand/useCommand.stories.mdx"],"sourcesContent":["export interface DeferredPromise<TData> {\n  reject: (reason: unknown) => void\n  resolve: (value: TData) => void\n  promise: Promise<TData>\n}\n\nconst defer = <TData>(): DeferredPromise<TData> => {\n  const deferred: DeferredPromise<TData> = {} as any // AZ-NOTE: by intention\n\n  const promise = new Promise<TData>((resolve, reject) => {\n    deferred.resolve = resolve\n    deferred.reject = reject\n  })\n\n  deferred.promise = promise\n  return deferred\n}\n\nexport default defer\n","import { useCallback, useMemo, useRef, useState } from 'react'\n\nimport type { Result as _Result } from '@types'\nimport defer from '@utils/defer'\n\nexport type Result<TData> = _Result<TData, Error>\n\nexport interface UseCommandReturn<TData> {\n  send: () => void\n  getResult: () => Promise<Result<TData>>\n  signal: CommandRequest<TData>\n}\n\nexport interface CommandRequest<TData = null> {\n  triggers: number\n  respond: (res: Result<TData>) => void\n}\n\n/**\n * # How to use?\n *\n * On the Parent side:\n *\n * ```\n * const command = useCommand()\n * command.send()\n * const result = await command.getResult()\n * ```\n *\n * On the Child side:\n *\n * ```\n * useCommandListener(signal, async () => {\n *   // do some async job\n *   return  42\n * })\n * ```\n */\nconst useCommand = <TData = null>(): UseCommandReturn<TData> => {\n  const [requestCounter, setRequestCounter] = useState(0)\n  const result = useRef(defer<Result<TData>>())\n\n  const send = useCallback(() => {\n    result.current = defer<Result<TData>>()\n    setRequestCounter(prev => prev + 1)\n  }, [])\n\n  const respond = useCallback((res: Result<TData>) => {\n    result.current.resolve?.(res)\n  }, [])\n\n  const getResult = useCallback(async (): Promise<Result<TData>> => {\n    return await result.current.promise\n  }, [])\n\n  return useMemo(() => ({\n    getResult,\n    send,\n    signal: {\n      triggers: requestCounter,\n      respond\n    }\n  }), [\n    getResult,\n    requestCounter,\n    respond,\n    send\n  ])\n}\n\nexport default useCommand\n","export type FCHook<R, P = unknown> = (props?: P) => R\n\nexport enum ResultType {\n  Ok = 'Ok',\n  Fail = 'Fail'\n}\n\nexport interface Ok<R> {\n  kind: ResultType.Ok\n  result: R\n}\n\nexport interface Fail<E> {\n  kind: ResultType.Fail\n  result: E\n}\n\nexport type Result<R, E = unknown> = Ok<R> | Fail<E>\n","import { Fail, ResultType } from '@/types'\n\nexport const fail = <E>(result: E): Fail<E> => ({ kind: ResultType.Fail, result })\n\nexport const isFail = <E>(result: any): result is Fail<E> => {\n  return result?.kind === ResultType.Fail\n}\n\nexport default fail\n","import { Ok, ResultType } from '@/types'\n\nexport const ok = <R>(result: R): Ok<R> => ({ kind: ResultType.Ok, result })\n\nexport const isOk = <R>(result: any): result is Ok<R> => {\n  return result?.kind === ResultType.Ok\n}\n\nexport default ok\n","import { useEffect, useRef } from 'react'\n\nimport type { CommandRequest } from '@hooks/useCommand'\nimport fail from '@utils/fail'\nimport ok from '@utils/ok'\n\n/**\n * # How to use?\n *\n * ```\n * useCommandListener(command, async (res) => { ... })\n * ```\n */\nconst useCommandListener = <TData = null>(\n  command: CommandRequest<TData>,\n  doJob: () => Promise<TData>\n): void => {\n  const refInvocation = useRef(command.triggers)\n  const refJob = useRef(doJob)\n\n  useEffect(() => {\n    const runEffect = async (): Promise<void> => {\n      try {\n        const result = await refJob.current()\n        command.respond(ok(result))\n      } catch (err) {\n        command.respond(fail(err as Error))\n      }\n    }\n\n    if (command.triggers > refInvocation.current) {\n      refInvocation.current++\n      void runEffect()\n    }\n  }, [\n    command.triggers,\n    command.respond\n  ])\n\n  useEffect(() => {\n    refJob.current = doJob\n  }, [doJob])\n}\n\nexport default useCommandListener\n","import { css } from '@emotion/css'\nimport '@UI/GlobalStyles/styles'\n\nexport default css(`\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  background-color: rgba(51, 153, 204, 0.3);\n  padding: 16px;\n  padding-top: 48px;\n  position: relative;\n  margin-top: 10px;\n\n  .block-label {\n    position: absolute;\n    padding: 4px 8px;\n    top: -16px;\n    left: -10px;\n    border: 1px solid gray;\n    border-radius: 4px;\n    background-color: yellow;\n    width: fit-content;\n\n    &.right {\n      left: unset;\n      right: -10px;\n    }\n  }\n\n  .computation-worker {\n    position: relative;\n    border: 1px solid gray;\n    border-radius: 4px;\n    padding: 24px;\n    margin-bottom: 48px;\n\n    label {\n      margin-right: 16px;\n    }\n\n    progress {\n      -webkit-appearance: none;\n       appearance: none;\n\n      border-radius: 7px; \n      width: 80%;\n      height: 22px;\n      box-shadow: 1px 1px 4px rgba( 0, 0, 0, 0.2 );\n    }\n\n    progress::-webkit-progress-bar {\n      background-color: lightgreen;\n      border-radius: 7px;\n    }\n\n    progress::-webkit-progress-value {\n      background-color: rebeccapurple;\n      border-radius: 7px;\n    }\n\n  }\n\n  .result {\n    margin-top: 24px;\n  }\n\n  .action-buttons {\n    display: flex;\n    margin-top: 24px;\n\n    .cf-button-root {\n      margin-right: 24px;\n    }\n  }\n`)\n","import { useRef, useState, useCallback } from 'react'\nimport type { FC } from 'react'\n\nimport Button from '@UI/Button'\nimport type { CommandRequest } from '@hooks/useCommand'\nimport { useCommand, useCommandListener } from '@hooks/useCommand'\nimport { isOk } from '@utils/ok'\nimport CLASS_NAME from './styles'\n\nconst MAX_PROGRESS = 100\nconst INITIAL_RESULT = 'not started'\n\nexport const ParentComponent = (): JSX.Element => {\n  const command1 = useCommand<number>()\n  const command2 = useCommand<number>()\n  const commandReset = useCommand<void>()\n  const [result, setResult] = useState(INITIAL_RESULT)\n  const [isStartDisabled, setIsStartDisabled] = useState(false)\n\n  const onStart = useCallback(async (): Promise<void> => {\n    setIsStartDisabled(true)\n    setResult('in prgress')\n\n    commandReset.send()\n    await commandReset.getResult()\n\n    command1.send()\n    const result1 = await command1.getResult()\n\n    command2.send()\n    const result2 = await command2.getResult()\n\n    if (isOk(result1) && isOk(result2)) {\n      setResult(`${result1.result + result2.result}`)\n    } else {\n      setResult('failed')\n    }\n\n    setIsStartDisabled(false)\n  }, [\n    command1.send,\n    command1.getResult,\n    command2.send,\n    command2.getResult\n  ])\n\n  const onRestAll = useCallback(async (): Promise<void> => {\n    commandReset.send()\n    await commandReset.getResult()\n\n    setResult(INITIAL_RESULT)\n    setIsStartDisabled(false)\n  }, [commandReset.send])\n\n  return (\n    <div className={CLASS_NAME}>\n      <div className='block-label'>Parent</div>\n\n      <div className='progress-bars'>\n        <ChildComponent\n          id='worker1'\n          startCommand={command1.signal}\n          resetCommand={commandReset.signal}\n        />\n\n        <ChildComponent\n          id='worker2'\n          startCommand={command2.signal}\n          resetCommand={commandReset.signal}\n        />\n      </div>\n\n      <div className='result'>Result: {result}</div>\n\n      <div className='action-buttons'>\n        <Button\n          isDisabled={isStartDisabled}\n          onClick={onStart}\n          variant='outlined'\n        >\n          Start\n        </Button>\n\n        <Button\n          onClick={onRestAll}\n          variant='outlined'\n        >\n          Reset All\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport interface ChildComponentProps {\n  id: string\n  startCommand: CommandRequest<number>\n  resetCommand: CommandRequest<void>\n}\n\nexport const ChildComponent: FC<ChildComponentProps> = ({\n  id,\n  resetCommand,\n  startCommand\n}) => {\n  const [progress, setProgress] = useState(0)\n  const refProgress = useRef(0)\n\n  const doComputation = useCallback(async (): Promise<number> => {\n    console.info(`Child \"${id}\" received \"Start computation\" command`)\n    return await new Promise((resolve) => {\n      const id = setInterval(() => {\n        if (refProgress.current < MAX_PROGRESS) {\n          refProgress.current++\n          setProgress(prev => prev + 1)\n        } else {\n          clearInterval(id)\n          resolve(Math.random())\n        }\n      }, 10)\n    })\n  }, [])\n\n  useCommandListener(startCommand, doComputation)\n\n  useCommandListener(resetCommand, async (): Promise<void> => {\n    console.info(`Child \"${id}\" received \"Reset state\" command`)\n    refProgress.current = 0\n    setProgress(0)\n  })\n\n  return (\n    <div className='computation-worker'>\n      <div className='block-label right'>Child component \"{id}\"</div>\n\n      <label htmlFor='progress'>Computation:</label>\n      <progress id='progress' max={MAX_PROGRESS} value={progress}>{progress}%</progress>\n    </div>\n  )\n}\n\nexport default ParentComponent\n","import { Meta, Story } from '@storybook/addon-docs'\nimport Demo from './__examples__'\n\n<Meta title='Hooks/useCommand' component={Demo} />\n\n# useCommand\n\nDemo of `useCommand` usage\n\n<Story name='Example'>\n  <Demo />\n</Story>\n"],"names":["defer","__name","deferred","promise","resolve","reject","useCommand","requestCounter","setRequestCounter","useState","result","useRef","send","useCallback","prev","respond","res","_b","_a","getResult","useMemo","ResultType","fail","ok","isOk","useCommandListener","command","doJob","refInvocation","refJob","useEffect","runEffect","err","CLASS_NAME","css","MAX_PROGRESS","INITIAL_RESULT","ParentComponent","command1","command2","commandReset","setResult","isStartDisabled","setIsStartDisabled","onStart","result1","result2","onRestAll","_jsxs","_jsx","ChildComponent","signal","Button","id","resetCommand","progress","setProgress","refProgress","doComputation","console","id2","clearInterval","layoutProps","MDXLayout","MDXContent","components","props","mdx","Meta","Demo","Story","isMDXComponent","example","storyName","parameters","storySource","source","componentMeta","title","component","includeStories","mdxStoryNameToKey","docs","page","AddContext","__namedExportsOrder"],"mappings":"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"}