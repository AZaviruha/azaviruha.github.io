{"version":3,"file":"index-2b489e6a.js","sources":["../../src/hooks/useDragger.ts","../../src/UI/icons/DragIcon.tsx","../../src/UI/Modal/utils.ts","../../src/UI/Modal/components/constants.ts","../../src/UI/Modal/components/styles.ts","../../src/UI/Modal/components/Modal.tsx","../../src/UI/Modal/styles.ts","../../src/UI/Modal/index.tsx"],"sourcesContent":["import { RefObject, useEffect, useRef } from 'react'\n\ninterface UseDraggerReturn {\n  targetRef: RefObject<HTMLDivElement>\n  draggableRef: RefObject<HTMLDivElement>\n}\n\ninterface UseDraggerProps {\n  isDraggable: boolean\n  constraintId: string\n  targetPadding?: number\n  transform?: { x?: number, y?: number }\n}\n\ninterface Coords {\n  startX: number\n  startY: number\n  lastX: number\n  lastY: number\n}\n\nfunction useDragger (props: UseDraggerProps): UseDraggerReturn {\n  const { isDraggable, constraintId, targetPadding = 0, transform } = props\n  const isClicked = useRef<boolean>(false)\n  const targetRef = useRef<HTMLDivElement | null>(null)\n  const draggableRef = useRef<HTMLDivElement | null>(null)\n\n  const coords = useRef<Coords>({\n    startX: 0,\n    startY: 0,\n    lastX: 0,\n    lastY: 0\n  })\n\n  useEffect(() => {\n    if (!isDraggable) return\n    const constraintElement = document.getElementById(constraintId)\n    const target = targetRef.current\n    const container = constraintElement ?? document.body\n    const draggable = draggableRef.current\n\n    if (target == null) throw new Error('Element with given id does not exist')\n    if (draggable == null) throw new Error('Element with given id does not exist')\n    if (container == null) throw new Error('Element with given id does not exist')\n    const containerRect = container.getBoundingClientRect()\n    // define constraint positions considering targetPadding\n    const constraintLeftPosition = containerRect.left - targetPadding\n    const constraintTopPosition = containerRect.top - targetPadding\n\n    // define initial position\n    let initialTop = constraintTopPosition\n    let initialLeft = constraintLeftPosition\n\n    if (transform != null) {\n      if (transform.x != null) {\n        initialLeft = transform.x\n      }\n\n      if (transform.y != null) {\n        initialTop = transform.y\n      }\n    }\n\n    // setup initial position\n    target.style.top = `${initialTop}px`\n    target.style.left = `${initialLeft}px`\n\n    // setup last modal position\n    coords.current.lastX = target.offsetLeft\n    coords.current.lastY = target.offsetTop\n\n    const onMouseDown = (e: MouseEvent): void => {\n      isClicked.current = true\n      coords.current.startX = e.clientX\n      coords.current.startY = e.clientY\n    }\n\n    const onMouseUp = (): void => {\n      isClicked.current = false\n      coords.current.lastX = target.offsetLeft\n      coords.current.lastY = target.offsetTop\n    }\n\n    const onMouseMove = (e: MouseEvent): void => {\n      if (!isClicked.current) return\n      // define start positions\n      const nextX = e.clientX - coords.current.startX + coords.current.lastX\n      const nextY = e.clientY - coords.current.startY + coords.current.lastY\n\n      let offsetX = nextX\n      let offsetY = nextY\n\n      // define contstraints\n      const containerLeftCorner = constraintLeftPosition\n      const containerRightCorner = containerRect.right - (target.offsetWidth) + targetPadding\n      const containerTopCorner = constraintTopPosition\n      const containerBottomCorner = containerRect.bottom - (target.offsetHeight) + targetPadding\n\n      // left/right constraint\n      if (nextX < containerLeftCorner) {\n        offsetX = containerLeftCorner\n      } else if (nextX > containerRightCorner) {\n        offsetX = containerRightCorner\n      }\n      // top/bottom constraint\n      if (nextY < containerTopCorner) {\n        offsetY = containerTopCorner\n      } else if (nextY > containerBottomCorner) {\n        offsetY = containerBottomCorner\n      }\n      target.style.top = `${offsetY}px`\n      target.style.left = `${offsetX}px`\n    }\n\n    draggable.addEventListener('mousedown', onMouseDown)\n    draggable.addEventListener('mouseup', onMouseUp)\n    target.addEventListener('mouseup', onMouseUp)\n    target.addEventListener('mousemove', onMouseMove)\n    target.addEventListener('mouseleave', onMouseUp)\n\n    const cleanup = (): void => {\n      draggable.removeEventListener('mousedown', onMouseDown)\n      draggable.removeEventListener('mouseup', onMouseUp)\n      target.removeEventListener('mouseup', onMouseUp)\n      target.removeEventListener('mousemove', onMouseMove)\n      target.removeEventListener('mouseleave', onMouseUp)\n    }\n\n    return cleanup\n  }, [isDraggable, constraintId, targetPadding, transform])\n\n  return {\n    targetRef,\n    draggableRef\n  }\n}\n\nexport default useDragger\n","import type { FC } from 'react'\n\nconst DragIcon: FC = () => {\n  return (\n    <svg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n      <g clipPath='url(#clip0_46016_67110)'>\n        <path d='M19 9H5C4.45 9 4 9.45 4 10C4 10.55 4.45 11 5 11H19C19.55 11 20 10.55 20 10C20 9.45 19.55 9 19 9ZM5 15H19C19.55 15 20 14.55 20 14C20 13.45 19.55 13 19 13H5C4.45 13 4 13.45 4 14C4 14.55 4.45 15 5 15Z' fill='black' fillOpacity='0.3' />\n      </g>\n      <defs>\n        <clipPath id='clip0_46016_67110'>\n          <rect width='24' height='24' fill='white' />\n        </clipPath>\n      </defs>\n    </svg>\n\n  )\n}\n\nexport default DragIcon\n","export const delay = (callback: () => void, delayTime: number = 0): void => {\n  window.requestAnimationFrame(() => {\n    setTimeout(callback, delayTime)\n  })\n}\n","export const ANIMATION_TIME = 225\nexport const DEFAULT_MAX_WIDTH = 680\nexport const MOBILE_SIZE = 480\n","import { css } from '@emotion/css'\nimport {\n  ANIMATION_TIME,\n  DEFAULT_MAX_WIDTH,\n  MOBILE_SIZE\n} from './constants'\n\nexport interface StyleConfigs {\n  isFullscreen?: boolean\n  isDraggable?: boolean\n  maxWidth?: number\n  minWidth?: number\n  withTitle?: boolean\n}\n\nexport const scrollWrapperPadding = 16\n\nconst fullScreenStylesPreset = `\n  min-height: 100vh;\n  border-radius: unset;\n  box-shadow: unset;\n`\n\nconst defaultStylesPreset = `\n  border-radius: 12px;\n  box-shadow: 0px 0px 8px 5px rgb(0 0 0 / 2%), 0px 10px 16px rgb(0 0 0 / 8%), 0px 6px 30px rgb(0 0 0 / 3%);\n`\n\nconst notDraggableStylesPreset = `\n  position: fixed;\n  inset: 0px;\n  background-color: rgba(0, 0, 0, 0.5);\n`\n\nconst draggableWrapperPreset = `\nz-index: 1300;\n`\n\nconst notDraggableContainerPreset = `\n  position: fixed;\n  inset: 0px;\n`\n\nconst geMinWidth = (\n  minWidth?: number,\n  isFullscreen?: boolean,\n  isMinContent?: boolean\n): string => {\n  if (isFullscreen === true) {\n    return `max(100vw, ${minWidth ?? 0}px)`\n  }\n\n  if (minWidth != null) {\n    return isMinContent === true ? 'min-content' : `${minWidth}px`\n  }\n\n  return 'auto'\n}\n\nexport default ({\n  isFullscreen = false,\n  maxWidth = DEFAULT_MAX_WIDTH,\n  minWidth,\n  isDraggable = false,\n  withTitle\n}: StyleConfigs): string => css(`\n  opacity: 0;\n  ${isDraggable ? '' : notDraggableContainerPreset}\n  transition: opacity ${ANIMATION_TIME}ms cubic-bezier(0.4, 0, 0.2, 1);\n  display: flex;\n  justify-content: center;\n\n  &.cf-modal-appeared {\n    opacity: 1;\n  }\n\n  .cf-modal-backdrop {\n    z-index: -1;\n    ${isDraggable ? '' : notDraggableStylesPreset}\n  }\n\n  .cf-modal-content-scroll-wrapper {\n    overflow: auto;\n    width: ${geMinWidth(minWidth, isFullscreen, true)};\n    position: ${isDraggable ? 'fixed' : 'relative'};\n    display: flex;\n    ${isFullscreen ? '' : `padding: ${scrollWrapperPadding}px;`}\n    ${isDraggable ? draggableWrapperPreset : ''}\n  }\n\n  .cf-modal-root {\n    ${isFullscreen\n      ? fullScreenStylesPreset\n      : defaultStylesPreset\n    }\n    position: relative;\n    min-width: ${geMinWidth(minWidth, isFullscreen)};\n    margin: auto;\n    width: 100%;\n    max-width: ${maxWidth >= (minWidth ?? 0) ? `${maxWidth}px` : 'unset'};\n    box-sizing: border-box;\n    padding: 0px 0px 40px;\n    background: #fff;\n    overflow-y: auto;\n\n    @media (max-width: ${MOBILE_SIZE}px) {\n      max-width: unset;\n      min-width: 100vw;\n      padding: 0px;\n      margin: 0px auto;\n      ${fullScreenStylesPreset}\n    }\n\n    :focus {\n      outline: 0px;\n    }\n  }\n\n  .cf-modal-title {\n    display: grid;\n    grid-template-columns: ${isDraggable ? '30px 1fr 36px' : '1fr 36px'};\n    align-items: center;\n    grid-column-gap: 16px;\n    padding: 40px 40px 0px;\n    cursor: ${isDraggable ? 'move' : 'default'};\n\n    p, h6, h5, h4, h3, h2, h1, span {\n      font-size: 34px;\n      line-height: 36px;\n      font-family: Roboto, sans-serif;\n      font-weight: 400;\n      margin: 0px;\n    }\n\n    @media (max-width: ${MOBILE_SIZE}px) {\n      padding: 20px;\n      position: relative;\n\n      p, h6, h5, h4, h3, h2, h1, span {\n        font-size: 20px;\n        line-height: 20px;\n      }\n    }\n\n    .cf-icon-button {\n      position: relative;\n      width: 36px;\n      height: 36px;\n      align-self: flex-start;\n      background: transparent;\n      transition: .4s ease;\n      \n      :hover {\n        background: rgb(240, 240, 240);\n      }\n    }\n  }\n\n  .cf-modal-content {\n    margin: 0px auto;\n    background: #fff;\n    padding: ${withTitle === true ? '32px 40px 0;' : '40px 40px 0;'}\n\n    @media (max-width: ${MOBILE_SIZE}px) {\n      padding: 0px 16px;\n    }\n\n    > .cf-loader {\n      position: absolute;\n      inset: 0;\n      z-index: 100;\n      background: rgba(255, 255, 255, 0.75);\n    }\n  }\n\n  .cf-modal-footer {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 24px;\n    margin-top: 48px;\n    box-sizing: border-box;\n\n    @media (max-width: ${MOBILE_SIZE}px) {\n      padding: 0px 16px;\n    }\n  }\n`)\n","import { useCallback, useEffect, useMemo, useRef } from 'react'\nimport type { FC, KeyboardEvent, ReactNode } from 'react'\n\nimport useDragger from '@hooks/useDragger'\nimport CloseIcon from '@UI/icons/CloseIcon'\nimport IconButton from '@UI/IconButton'\nimport DragIcon from '@UI/icons/DragIcon'\nimport Loader from '@UI/Loader'\nimport { cn } from '@utils/ui'\n\nimport { delay } from '../utils'\nimport rootStyles, { scrollWrapperPadding } from './styles'\n\nexport type ModalCloseReason = 'escapeKeyDown' | 'backdropClick' | 'closeIconClick'\n\nexport interface ModalProps {\n  className?: string\n  closeByEsc?: boolean\n  closeByBackdropClick?: boolean\n  dataTestId?: string\n  isCloseIconVisible?: boolean\n  isFullscreen?: boolean\n  isOpen?: boolean\n  keepContentMounted?: boolean\n  isLoading?: boolean\n  maxWidth?: number\n  minWidth?: number\n  onClose?: (reason: ModalCloseReason | MouseEvent) => void\n  renderFooterActions?: () => ReactNode\n  title?: string | ReactNode\n  titleDataTestId?: string\n  isDraggable?: boolean\n  isStopOverflow?: boolean\n  constraintId?: string\n  transform?: { x?: number, y?: number }\n}\n\nconst KEY_NAME_ESC = 'Escape'\n\nexport const Modal: FC<ModalProps> = ({\n  children,\n  className,\n  closeByEsc = true,\n  closeByBackdropClick = true,\n  dataTestId = 'modal-window',\n  isFullscreen = false,\n  isOpen = true,\n  keepContentMounted = true, // AS: should be false by default, need additional testing\n  isLoading,\n  onClose: _onClose,\n  isCloseIconVisible = _onClose != null,\n  maxWidth,\n  minWidth,\n  renderFooterActions,\n  title,\n  isStopOverflow = false,\n  isDraggable = false,\n  constraintId = '',\n  titleDataTestId,\n  transform\n}) => {\n  const containerRef = useRef<HTMLDivElement | null>(null)\n  const withTitle = (title != null) || isCloseIconVisible\n  const showActions = renderFooterActions != null\n  const rootCls = useMemo(() => (\n    rootStyles({ isFullscreen, maxWidth, minWidth, isDraggable, withTitle })),\n  [isFullscreen, maxWidth, minWidth, isDraggable, withTitle])\n\n  const { targetRef: rootRef, draggableRef } = useDragger(\n    {\n      isDraggable,\n      constraintId,\n      targetPadding: scrollWrapperPadding,\n      transform\n    })\n\n  /**\n   * changing class here instead of in the jsx so that UI was already rendered\n   * and css could understood style change and animate transition.\n   */\n  useEffect(() => {\n    const div = containerRef.current\n    if (div == null) {\n      return\n    }\n\n    delay(() => {\n      const method = isOpen ? 'add' : 'remove'\n      containerRef.current?.classList[method]('cf-modal-appeared')\n    })\n  }, [isOpen])\n\n  /**\n   * makes 'esc' key work immediately\n   */\n  useEffect(() => {\n    let overflow: string\n    let rightPadding: string\n\n    if (isOpen) {\n      rootRef.current?.focus()\n      if (isStopOverflow) {\n        overflow = document.body.style.overflow\n        rightPadding = document.body.style.paddingRight\n        document.body.style.paddingRight = '6px'\n        document.body.style.overflow = 'hidden'\n      }\n    }\n\n    return () => {\n      if (isStopOverflow) {\n        document.body.style.overflow = overflow ?? 'auto'\n        document.body.style.paddingRight = rightPadding ?? '0px'\n      }\n    }\n  }, [isOpen, isStopOverflow])\n\n  // ========================================== //\n  //                   HANDLERS                 //\n  // ========================================== //\n\n  const onClose = useCallback((reason: ModalCloseReason | MouseEvent = 'closeIconClick') => {\n    if (typeof reason === 'object') {\n      _onClose?.('closeIconClick')\n      return\n    }\n\n    if (isStopOverflow) {\n      document.body.style.overflow = 'auto'\n      document.body.style.paddingRight = '6px'\n    }\n    _onClose?.(reason)\n  }, [_onClose, isStopOverflow])\n\n  const onIconClose = useCallback(() => {\n    _onClose?.('closeIconClick')\n  }, [_onClose])\n\n  const onBackdropClick = useCallback(() => {\n    if (closeByBackdropClick) {\n      onClose('backdropClick')\n    }\n  }, [onClose, closeByBackdropClick])\n\n  const onKeyDown = useCallback((e: KeyboardEvent<HTMLDivElement>) => {\n    if (closeByEsc && e.key === KEY_NAME_ESC) {\n      onClose('escapeKeyDown')\n    }\n  }, [onClose, closeByEsc])\n\n  // ========================================== //\n\n  return (\n    <div\n      className={cn(rootCls, className, 'cf-modal-container')}\n      ref={containerRef}\n    >\n      <div\n        className='cf-modal-backdrop'\n        onClick={onBackdropClick}\n      />\n      <div className='cf-modal-content-scroll-wrapper' ref={rootRef}>\n        <div\n          role='dialog'\n          className='cf-modal-root'\n          data-test-id={dataTestId}\n          onKeyDown={onKeyDown}\n          tabIndex={-1} // makes onKeyDown work and does not mess tabIndex order\n        >\n          {withTitle && (\n            <div className='cf-modal-title' ref={draggableRef} data-test-id={titleDataTestId}>\n              {isDraggable && <DragIcon />}\n              {title != null\n                ? typeof title === 'string'\n                  ? <h3>{title}</h3>\n                  : title\n                : <div />}\n              {isCloseIconVisible && (\n                <IconButton\n                  aria-label='close'\n                  data-test-id='modal-btn-x'\n                  onClick={onIconClose}\n                >\n                  <CloseIcon />\n                </IconButton>\n              )}\n            </div>\n          )}\n          <div className='cf-modal-content'>\n            {isLoading === true && <Loader size='large' />}\n            {(isOpen || keepContentMounted) ? children : null}\n          </div>\n          {showActions && (\n            <div className='cf-modal-footer'>\n              {renderFooterActions?.()}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import { css } from '@emotion/css'\n\nexport default css(`\n  z-index: 1300;\n  position: fixed;\n  inset: 0px;\n  backdrop-filter: blur(7px);\n`)\n","import { useEffect, useState } from 'react'\nimport type { FC } from 'react'\nimport { createPortal } from 'react-dom'\n\nimport ModalWindow from './components/Modal'\nimport type { ModalProps } from './components/Modal'\nimport { ANIMATION_TIME } from './components/constants'\nimport { delay } from './utils'\n\nimport CLASS_NAME from './styles'\n\nexport type { ModalProps, ModalCloseReason } from './components/Modal'\n\nexport const Modal: FC<ModalProps> = (props) => {\n  const [portalEl, setPortalEl] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (props.isOpen !== true) {\n      return\n    }\n\n    /**\n    * during modal open with Portal we need to block body scrollbars\n    */\n    const oldValue = document.body.style.overflow ?? ''\n\n    const div = document.createElement('div')\n\n    if (props.isDraggable !== true) {\n      div.classList.add(CLASS_NAME)\n    }\n\n    div.setAttribute('role', 'presentation')\n    document.body.appendChild(div)\n\n    setPortalEl(div)\n\n    return () => {\n      document.body.style.overflow = oldValue\n      /**\n       * delaying to wait for closing animation to finish\n       */\n      delay(() => document.body.removeChild(div), ANIMATION_TIME)\n    }\n  }, [props.isOpen])\n\n  if (portalEl == null) {\n    return null\n  }\n\n  return createPortal(<ModalWindow {...props} />, portalEl)\n}\n\nexport default Modal\n"],"names":["useDragger","props","isDraggable","constraintId","targetPadding","transform","isClicked","useRef","targetRef","draggableRef","coords","useEffect","constraintElement","target","container","draggable","containerRect","constraintLeftPosition","constraintTopPosition","initialTop","initialLeft","onMouseDown","__name","e","onMouseUp","onMouseMove","nextX","nextY","offsetX","offsetY","containerLeftCorner","containerRightCorner","containerTopCorner","containerBottomCorner","DragIcon","_jsxs","_jsx","delay","callback","delayTime","ANIMATION_TIME","DEFAULT_MAX_WIDTH","MOBILE_SIZE","scrollWrapperPadding","fullScreenStylesPreset","defaultStylesPreset","notDraggableStylesPreset","draggableWrapperPreset","notDraggableContainerPreset","geMinWidth","minWidth","isFullscreen","isMinContent","rootStyles","maxWidth","withTitle","css","KEY_NAME_ESC","Modal","children","className","closeByBackdropClick","dataTestId","isOpen","keepContentMounted","isLoading","_onClose","renderFooterActions","title","titleDataTestId","containerRef","isCloseIconVisible","showActions","rootCls","useMemo","rootRef","method","overflow","rightPadding","isStopOverflow","document","onClose","useCallback","reason","onIconClose","onBackdropClick","onKeyDown","closeByEsc","cn","Loader","CLASS_NAME","portalEl","setPortalEl","useState","oldValue","div","createPortal","ModalWindow"],"mappings":"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"}