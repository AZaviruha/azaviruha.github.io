{"version":3,"file":"NumberInput.stories-53a86de7.js","sources":["../../src/UI/NumberInput/FormNumberInput.tsx","../../src/UI/NumberInput/__examples__/index.tsx","../../src/UI/NumberInput/NumberInput.stories.mdx"],"sourcesContent":["import type { FC } from 'react'\nimport NumberInput from '@UI/NumberInput'\nimport FormFieldHOC from '@UI/FormFieldHOC'\n\nimport type { NumberInputProps, InputValue } from './types' // AZ-NOTE: do not replace relative import\nimport type { FormFieldProps, FormCompatible } from '../FormFieldHOC'\n\nexport default FormFieldHOC<FormCompatible<NumberInputProps, InputValue>, InputValue>(NumberInput as FC<FormFieldProps<InputValue>>)\n","import { type FC, useCallback, useMemo, useState } from 'react'\nimport { GlobalStyles } from '@/UI/GlobalStyles'\nimport NumberInput from '../'\nimport FormNumberInput from '../FormNumberInput'\nimport type { ComplementMode } from '../types'\n\nexport { NumberInput }\n\nexport const FormNumberInputExample: FC = () => {\n  const [value, setValue] = useState<number | null>(null)\n  const [valueStr, setValueStr] = useState<string | null>('2131')\n  const [disabled, setDisabled] = useState(false)\n  const [touched, setTouched] = useState(false)\n  const [isNumberString, setIsNumberString] = useState(false)\n  const [isEmptyAllowed, setEmptyAllowed] = useState(true)\n  const [isNegativeAllowed, setIsNegativeAllowed] = useState(true)\n  const [decimalPrecision, setDecimalPrecision] = useState('2')\n  const [min, setMin] = useState<number | undefined>(undefined)\n  const [max, setMax] = useState<number | undefined>(undefined)\n  const [blurComplementMode, setBlurComplementMode] = useState<ComplementMode>('max-scale')\n  const [mountComplementMode, setMountComplementMode] = useState<ComplementMode>('max-scale')\n\n  const fieldProps = useMemo(() => {\n    return isNumberString\n      ? {\n        onChange: (_: string, val: string | null) => {\n          console.log('onChange str ', val, typeof val)\n          setValueStr(val)\n          setTouched(true)\n        },\n        value: valueStr\n      }\n      : {\n        onChange: (_: string, val: number | null) => {\n          console.log('onChange num ', val, typeof val)\n          setValue(val)\n          setTouched(true)\n        },\n        value\n      }\n  }, [isNumberString, value])\n\n  return (\n    <div>\n      {/* resets some nasty input related styles; such as autosuggestion highlight */}\n      <GlobalStyles />\n      <div style={{ marginBottom: '16px' }}>\n        <button\n          style={{ marginRight: '20px' }}\n          onClick={() => setDisabled(prev => !prev)}\n        >\n          Toggle disabled\n        </button>\n\n        <button\n          style={{ marginRight: '20px' }}\n          onClick={() => setTouched(false)}\n        >\n          Reset touched\n        </button>\n\n        <button\n          style={{ marginRight: '20px' }}\n          onClick={() => setValue(42)}\n        >\n          Set value to 42\n        </button>\n\n        <button onClick={() => setValue(0.1)}>Set value to 0.1</button>\n      </div>\n\n      <div style={{ marginBottom: '16px' }}>\n        <label>\n          <input\n            type='checkbox'\n            checked={isNegativeAllowed}\n            onChange={(evt) => setIsNegativeAllowed(evt.target.checked)}\n          />\n          <span style={{ marginLeft: '4px' }}>Allow negative?</span>\n        </label>\n\n        <span style={{ margin: '0px 20px' }}>|</span>\n\n        <label>\n          <select\n            value={blurComplementMode}\n            onChange={(evt) => setBlurComplementMode(evt.target.value as ComplementMode)}\n          >\n            <option value='max-scale'>max-scale</option>\n            <option value='min-scale'>min-scale</option>\n          </select>\n          <span style={{ marginLeft: '4px' }}>Complement on blur mode</span>\n        </label>\n\n        <span style={{ margin: '0px 20px' }}>|</span>\n\n        <label>\n          <select\n            value={mountComplementMode}\n            onChange={(evt) => setMountComplementMode(evt.target.value as ComplementMode)}\n          >\n            <option value='max-scale'>max-scale</option>\n            <option value='min-scale'>min-scale</option>\n          </select>\n          <span style={{ marginLeft: '4px' }}>Complement on mount mode</span>\n        </label>\n\n        <span style={{ margin: '0px 20px' }}>|</span>\n\n        <label>\n          <input\n            type='checkbox'\n            checked={isEmptyAllowed}\n            onChange={(evt) => setEmptyAllowed(evt.target.checked)}\n          />\n          <span style={{ marginLeft: '4px' }}>Allow empty?</span>\n        </label>\n\n        <span style={{ margin: '0px 20px' }}>|</span>\n\n        <label>\n          <input\n            type='checkbox'\n            checked={isNumberString}\n            onChange={(evt) => {\n              const { checked } = evt.target\n              setIsNumberString(checked)\n\n              if (checked) {\n                setValueStr(value?.toString() ?? '')\n              } else {\n                setValue(Number(valueStr))\n              }\n            }}\n          />\n          <span style={{ marginLeft: '4px' }}>Is number represented as string?</span>\n        </label>\n      </div>\n      <div>\n        <label>\n          <span style={{ marginLeft: '4px' }}>Decimal Precision</span>\n          <input\n            type='number'\n            value={decimalPrecision}\n            min={0}\n            maxLength={2}\n            onChange={(evt) => setDecimalPrecision(evt.target.value)}\n          />\n        </label>\n\n        <label>\n          <span style={{ marginLeft: '4px' }}>Min value</span>\n          <input\n            type='number'\n            value={min ?? ''}\n            onChange={(evt) => setMin(Number(evt.target.value))}\n          />\n        </label>\n\n        <label>\n          <span style={{ marginLeft: '4px' }}>Max value</span>\n          <input\n            type='number'\n            value={max ?? ''}\n            onChange={(evt) => setMax(Number(evt.target.value))}\n          />\n        </label>\n      </div>\n\n      <hr style={{ margin: '20px 0px' }} />\n\n      <FormNumberInput\n        dataTestId='form-input-sales-tax'\n        disabled={disabled}\n        error={value == null}\n        errorMessage='Field is required'\n        helper='how can i help?'\n        id='salesTax'\n        isEmptyAllowed={isEmptyAllowed}\n        isNegativeAllowed={isNegativeAllowed}\n        blurComplementMode={blurComplementMode}\n        mountComplementMode={mountComplementMode}\n        min={min}\n        max={max}\n        decimalPrecision={decimalPrecision === '' ? 0 : Number(decimalPrecision)}\n        label='Sales tax amount'\n        startAdornment='$'\n        touched={touched}\n        {...fieldProps}\n      />\n    </div>\n  )\n}\n\n\nexport const NumberInputWithIdExample: FC = () => {\n  const [value, setValue] = useState<number | null>(null)\n\n  const onChange = useCallback((_: string, val: number | null) => {\n    setValue(val)\n  }, [])\n\n  return (\n    <FormNumberInput\n      id='salesTax'\n      value={value}\n      label='With id, check my data-test-id'\n      onChange={onChange}\n    />\n  )\n}\n\nexport const NumberInputWithNestedIdExample: FC = () => {\n  const [value, setValue] = useState<number | null>(null)\n\n  const onChange = useCallback((_: string, val: number | null) => {\n    setValue(val)\n  }, [])\n\n  return (\n    <FormNumberInput\n      id='SomeProps.SomeMoreNested.Gotcha'\n      value={value}\n      label='With nested id, check my data-test-id'\n      onChange={onChange}\n    />\n  )\n}\n\nexport const NumberInputWithIdAndDataTestIdExample: FC = () => {\n  const [value, setValue] = useState<number | null>(null)\n\n  const onChange = useCallback((_: string, val: number | null) => {\n    setValue(val)\n  }, [])\n\n  return (\n    <FormNumberInput\n      id='SomeId.Here'\n      dataTestId='number-input-with-id-and-data-test-id'\n      value={value}\n      label='With id and dataTestId, check my data-test-id'\n      onChange={onChange}\n    />\n  )\n}\n\n","import { Meta, Story } from '@storybook/addon-docs'\nimport { \n  NumberInput,\n  FormNumberInputExample,\n  NumberInputWithIdExample,\n  NumberInputWithNestedIdExample,\n  NumberInputWithIdAndDataTestIdExample\n} from './__examples__'\n\n<Meta title='NumberInput' component={NumberInput} />\n\n# NumberInput\n\n<Story name='Form Input (all features)'>\n  <FormNumberInputExample />\n</Story>\n\n<Story name='Form NumberInput dataTestId'>\n  <h1>Form NumberInput without dataTestId</h1>\n  <h4>*of course if dataTestId provided it will be used</h4>\n  <NumberInputWithIdExample />\n  <br/>\n  <NumberInputWithNestedIdExample />\n  <br/>\n  <NumberInputWithIdAndDataTestIdExample />\n</Story>\n"],"names":["FormNumberInput$1","FormFieldHOC","NumberInput","FormNumberInputExample","__name","value","setValue","useState","valueStr","setValueStr","disabled","setDisabled","touched","setTouched","isNumberString","setIsNumberString","isEmptyAllowed","setEmptyAllowed","isNegativeAllowed","setIsNegativeAllowed","decimalPrecision","setDecimalPrecision","min","setMin","max","setMax","blurComplementMode","setBlurComplementMode","mountComplementMode","setMountComplementMode","fieldProps","useMemo","_","val","console","_jsxs","_jsx","GlobalStyles","prev","checked","evt","FormNumberInput","NumberInputWithIdExample","onChange","useCallback","NumberInputWithNestedIdExample","NumberInputWithIdAndDataTestIdExample","layoutProps","MDXLayout","MDXContent","components","props","mdx","Meta","Story","isMDXComponent","formInputAllFeatures","storyName","parameters","storySource","source","formNumberInputDataTestId","React","componentMeta","title","component","includeStories","mdxStoryNameToKey","docs","page","AddContext","__namedExportsOrder"],"mappings":"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"}