{"version":3,"file":"index-79c39802.js","sources":["../../src/UI/Loader/styles.ts","../../src/UI/Loader/index.tsx"],"sourcesContent":["import { css } from '@emotion/css'\n\nexport type LoaderColors = 'primary' | 'dark' | 'light' | 'inherit'\n\ninterface StyleProps {\n  size?: number\n  color?: LoaderColors\n}\n\nexport default ({ size, color }: StyleProps): string => css(`\n  --color-loader-primary: #C99B86;\n  --color-loader-dark: #101010;\n  --color-loader-light: #ffffff;\n  --color-loader-inherit: inherit;\n\n  @keyframes circular-loader {\n    0% {\n      transform-origin: 50% 50%;\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes circular-dash {\n    0% {\n      stroke-dasharray: 1px, 200px;\n      stroke-dashoffset: 0px;\n    }\n    50% {\n      stroke-dasharray: 100px, 200px;\n      stroke-dashoffset: -15px;\n    }\n    100% {\n      stroke-dasharray: 100px, 200px;\n      stroke-dashoffset: -125px;\n    }\n  }\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n\n  :hover {\n    cursor: default;\n  }\n\n  .cf-animated-wrapper {\n    animation: circular-loader 1.4s linear infinite;\n\n    ${size != null ? `width: ${size}px;` : ''}\n    ${size != null ? `height: ${size}px;` : ''}\n    ${color != null ? `color: var(--color-loader-${color});` : ''}\n\n    svg {\n      display: block;\n\n      circle {\n        animation: circular-dash 1.4s ease-in-out infinite;\n        stroke-dasharray: 80px, 200px;\n        stroke-dashoffset: 0px;\n        stroke: currentColor;\n      }\n    }\n  }\n`)\n","import { useMemo } from 'react'\nimport type { FC } from 'react'\nimport { cn } from '@utils/ui'\nimport createStyles, { LoaderColors } from './styles'\n\ntype LoaderSize = 'small' | 'medium' | 'large'\nexport interface LoaderProps {\n  size?: LoaderSize | number\n  color?: LoaderColors\n  className?: string\n}\n\nconst SIZE_MAP: { [K in LoaderSize]: number } = {\n  small: 16,\n  medium: 24,\n  large: 64\n}\n\nconst DEFAULT_SIZE = 'medium'\n\nexport const Loader: FC<LoaderProps> = ({\n  className = '',\n  color = 'primary',\n  size: _size = DEFAULT_SIZE\n}) => {\n  const size: number = typeof _size === 'number' ? _size : SIZE_MAP[_size]\n  const rootCls = useMemo(() => createStyles({ size, color }), [size, color])\n\n  return (\n    <div className={cn(rootCls, className, 'cf-loader')}>\n      <div className='cf-animated-wrapper' role='progressbar'>\n        <svg viewBox='22 22 44 44'>\n          <circle cx='44' cy='44' r='20' fill='none' strokeWidth='3.6' />\n        </svg>\n      </div>\n    </div>\n  )\n}\n\nexport default Loader\n"],"names":["createStyles","__name","size","color","css","SIZE_MAP","DEFAULT_SIZE","Loader","className","_size","rootCls","useMemo","_jsx","cn"],"mappings":"iNASA,MAAeA,EAAAC,EAAA,CAAC,CAAE,KAAAC,EAAM,MAAAC,KAAgCC,EAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA0CtDF,GAAQ,KAAO,UAAUA,OAAY;AAAA,MACrCA,GAAQ,KAAO,WAAWA,OAAY;AAAA,MACtCC,GAAS,KAAO,6BAA6BA,MAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAa9D,EAzDc,gBCGfE,EAAA,CAAgD,MAAA,GACvC,OAAA,GACC,MAAA,EAEV,EAEAC,EAAA,SAEOC,EAAAN,EAAA,CAAA,CAAiC,UAAAO,EAAA,GAC1B,MAAAL,EAAA,UACJ,KAAAM,EAAAH,CAEV,IAAA,CACE,MAAAJ,EAAA,OAAAO,GAAA,SAAAA,EAAAJ,EAAAI,CAAA,EACAC,EAAAC,UAAA,IAAAX,EAAA,CAA2C,KAAAE,EAAEA,MAAAA,CAAMC,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAEnD,OAAAS,EAAA,MAAA,CACE,UAAAC,EAAAH,EAAAF,EAAA,WAAA,EAAkD,SAAAI,EAAA,MAAA,CAChD,UAAA,sBAAe,KAAA,cAA2B,SAAAA,EAAA,MAAA,CACxC,QAAA,cAAa,SAAAA,EAAA,SAAA,CACX,GAAA,KAAW,GAAA,KAAQ,EAAA,KAAO,KAAA,OAAU,YAAA,KAAmB,CAAA,CAAK,CAAA,CAAG,CAAA,CAC3D,CAAA,CAId,EAjBO"}