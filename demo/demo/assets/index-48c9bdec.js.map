{"version":3,"file":"index-48c9bdec.js","sources":["../../src/UI/Button/styles.ts","../../src/UI/Button/index.tsx"],"sourcesContent":["import { css } from '@emotion/css'\n\nexport default css(`\n  --cf-button-color-primary: #000000;\n  --cf-button-color-primary-hover: #212121;\n  --cf-button-color-secondary: #C99B86;\n  --cf-button-color-secondary-hover: #DDB3A0;\n  --cf-button-disabled-color: rgba(0, 0, 0, 0.3);\n  --cf-button-disabled-background: #f3f3f3;\n  --cf-button-adornment-size: 16px;\n\n  &.cf-button-root {\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    border-radius: 12px;\n    box-sizing: border-box;\n    border: 0px;\n    outline: 0px;\n    margin: 0px;\n    padding: 20px;\n\n    min-width: 150px;\n    height: 56px;\n  \n    :hover {\n      cursor: pointer;\n    }\n\n    // VARIANT STYLES\n\n    &.cf-button-variant-contained {\n      span, span * {\n        color: #fff;\n        fill: #fff;\n      }\n\n      &.cf-button-color-primary {\n        background-color: var(--cf-button-color-primary);\n\n        :hover {\n          background-color: var(--cf-button-color-primary-hover);\n        }\n      }\n\n      &.cf-button-color-secondary {\n        background-color: var(--cf-button-color-secondary);\n\n        :hover {\n          background-color: var(--cf-button-color-secondary-hover);\n        }\n      }\n\n      .cf-button-loader .cf-animated-wrapper {\n        color: #fff;\n      }\n\n      &.cf-button-disabled, &.cf-button-disabled:hover {\n        background-color: var(--cf-button-disabled-background);\n        cursor: default;\n\n        span, span * {\n          color: var(--cf-button-disabled-color);\n          fill: var(--cf-button-disabled-color);\n        }\n      }\n    }\n\n    &.cf-button-variant-outlined {\n      border-width: 1px;\n      border-style: solid;\n      background-color: #fff;\n\n      :hover {\n        background-color: #fff;\n      }\n\n      span, span * {\n        color: var(--cf-button-color-primary);\n      }\n\n      &.cf-button-color-primary {\n        border-color: var(--cf-button-color-primary);\n\n        :hover {\n          border-color: var(--cf-button-color-primary-hover);\n        }\n      }\n\n      &.cf-button-color-secondary {\n        border-color: var(--cf-button-color-secondary);\n\n        :hover {\n          border-color: var(--cf-button-color-secondary-hover);\n        }\n      }\n\n      .cf-button-loader .cf-animated-wrapper {\n        color: #000;\n      }\n\n      &.cf-button-disabled, &.cf-button-disabled:hover {\n        border-color: var(--cf-button-disabled-color);\n        cursor: default;\n\n        span, span * {\n          color: var(--cf-button-disabled-color);\n          fill: var(--cf-button-disabled-color);\n        }\n      }\n    }\n\n    &.cf-button-variant-text {\n      background-color: unset;\n      overflow: visible;\n      height: 24px;\n      line-height: 24px;\n      font-size: 16px;\n      letter-spacing: 0.15px;\n      min-width: unset;\n      padding: 0px;\n      width: auto;\n      text-decoration: underline;\n      text-underline-position: under;\n      color: #000;\n      border-radius: 0px;\n\n      :hover {\n        color: #212121;\n      }\n\n      span {\n        white-space: nowrap;\n      }\n\n      &.cf-button-disabled, &.cf-button-disabled:hover {\n        color: rgba(0, 0, 0, 0.38);\n        cursor: default;\n      }\n\n      .cf-button-start-adornment, .cf-button-end-adornment {\n        margin: unset;\n      }\n\n      &.cf-button-loading {\n        .cf-button-content {\n          position: relative;\n        }\n\n        .cf-button-loader {\n          transform: none;\n          right: -24px;\n          left: unset;\n          top: 0px;\n          height: 24px;\n          \n          .cf-animated-wrapper {\n            color: #000;\n            width: 16px;\n            height: 16px;\n          }\n        }\n      }\n    }\n\n    // CONTENT SIZED STYLES\n\n    &.cf-button-content-sized {\n      min-width: 80px;\n      padding: 12px;\n      height: 40px;\n    }\n\n    // LOADER SPECIFIC STYLES\n\n    &.cf-button-loading .cf-button-loader {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n\n    .cf-button-start-adornment {\n      margin: 0px 12px 0px auto;\n    }\n\n    .cf-button-content {\n      margin: 0px;\n    }\n\n    .cf-button-end-adornment {\n      margin: 0px auto 0px 12px;\n    }\n\n    .cf-button-start-adornment, .cf-button-end-adornment {\n      height: var(--cf-button-adornment-size);\n\n      * {\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`)\n","import type { FC, ReactNode, MouseEvent, TouchEvent } from 'react'\nimport { cn } from '@utils/ui'\nimport CLASS_NAME from './styles'\nimport Loader from '@UI/Loader'\nimport { createRipple } from '@utils/ripple'\n\nexport interface ButtonProps {\n  className?: string\n  color?: 'primary' | 'secondary'\n  dataTestId?: string\n  endAdornment?: ReactNode\n  isContentSized?: boolean\n  isDisabled?: boolean\n  isLoading?: boolean\n  isRippleDisabled?: boolean\n  onClick: (e?: MouseEvent) => void\n  startAdornment?: ReactNode\n  variant?: 'contained' | 'outlined' | 'text'\n}\n\nexport const Button: FC<ButtonProps> = ({\n  children,\n  color = 'primary',\n  className,\n  dataTestId,\n  endAdornment,\n  isContentSized,\n  isDisabled,\n  isLoading,\n  isRippleDisabled,\n  onClick: _onClick,\n  startAdornment,\n  variant = 'contained'\n}) => {\n  const rippleMode = (\n    isRippleDisabled === true || isDisabled === true || isLoading === true || variant === 'text'\n  )\n    ? 'none'\n    : variant === 'contained' ? 'light' : 'dark'\n\n  const onClick = (e: MouseEvent<HTMLElement>): void => {\n    if (isDisabled === true || isLoading === true) {\n      return\n    }\n\n    _onClick(e)\n  }\n\n  const onMouseDown = (e: MouseEvent<HTMLElement> | TouchEvent<HTMLElement>): void => {\n    if (rippleMode !== 'none') {\n      createRipple(e)\n    }\n  }\n\n  return (\n    <button\n      className={cn(\n        CLASS_NAME,\n        className,\n        `cf-ripple-container-${rippleMode}`,\n        `cf-button-variant-${variant}`,\n        `cf-button-color-${color}`,\n        isContentSized === true ? 'cf-button-content-sized' : '',\n        isDisabled === true ? 'cf-button-disabled' : '',\n        isLoading === true ? 'cf-button-loading' : '',\n        'cf-button-root'\n      )}\n      data-test-id={dataTestId}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n      onTouchStart={onMouseDown}\n    >\n      {\n        (isLoading === true && variant !== 'text')\n          ? <Loader className='cf-button-loader' />\n          : (\n            <>\n              <span className='cf-button-start-adornment'>\n                {startAdornment != null ? startAdornment : null}\n              </span>\n              <span className='cf-button-content'>\n                {children}\n                {(isLoading === true && variant === 'text') && (\n                  <Loader className='cf-button-loader' />\n                )}\n              </span>\n              <span className='cf-button-end-adornment'>\n                {endAdornment != null ? endAdornment : null}\n              </span>\n            </>\n            )\n      }\n    </button>\n  )\n}\n\nexport default Button\n"],"names":["CLASS_NAME","css","Button","__name","children","className","dataTestId","endAdornment","isContentSized","isDisabled","isLoading","isRippleDisabled","_onClick","startAdornment","rippleMode","variant","onClick","e","onMouseDown","createRipple","_jsx","cn","color","_jsxs","_Fragment","Loader"],"mappings":"wQAEA,MAAelB,EC1LMC,EAAAC,EAAA,CAAA,CAAiC,SAAAC,EACtCA,MAAAA,EAAAA,UACQ,UAAAC,EACRA,WAAAA,EACAC,aAAAA,EACAC,eAAAA,EACAC,WAAAA,EACAC,UAAAA,EACAC,iBAAAA,EACAC,QAAAA,EACSC,eAAAA,EACTC,QAAAA,EAAAA,WAEF,IAAA,CACE,MAAAC,EAAAH,IAAA,IAAAF,IAAA,IAAAC,IAAA,IAAAK,IAAA,OAAA,OAAAA,IAAA,YAAA,QAAA,OAMAC,EAAAb,EAAAc,GAAA,CACER,IAAA,IAAAC,IAAA,IAIAE,EAAAA,CAAAA,CAAU,EALZ,WAQAM,EAAAf,EAAAc,GAAA,CACEH,IAAA,QACEK,EAAAA,CAAAA,CACF,EAHF,eAMA,OAAAC,EAAA,SAAA,CACE,UAAAC,EAAArB,EAAAK,EAAA,uBAAAS,IAAA,qBAAAC,IAAA,mBAAAO,IAAAd,IAAA,GAAA,0BAAA,GAAAC,IAAA,GAAA,qBAAA,GAAAC,IAAA,GAAA,oBAAA,GAAA,gBAAA,EAUoB,eAAAJ,EAEJA,QAAAA,EACd,YAAAY,EACA,aAAAA,EACcA,SAAAA,IAAAA,IAAAA,IAAAA,OAAAA,EAAAA,EAAAA,CAID,UAAA,kBAAW,CAAA,EAAAK,EAAAC,EAAA,CAElB,SAAA,CAAAJ,EAAA,OAAA,CACE,UAAA,4BAAgB,SAAAP,GAAA,IAC6B,CAAA,EAAAU,EAAA,OAAA,CAE7C,UAAA,oBAAgB,SAAA,CAAAnB,EAAAM,IAAA,IAAAK,IAAA,QAAAK,EAAAK,EAAA,CAGL,UAAA,kBAAW,CAAA,CAAA,CACnB,CAAA,EAAAL,EAAA,OAAA,CAEH,UAAA,0BAAgB,SAAAb,GAAA,IACyB,CAAA,CAAA,CAClC,CAAA,CAAA,CAAA,CAMrB,EA1EO"}